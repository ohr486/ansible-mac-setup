---
- lineinfile: dest=~/.bash_profile line='# for kerl by ansible-mac-setup'
- lineinfile: dest=~/.bash_profile line='export KERL_CONFIGURE_OPTIONS="--enable-kernel-poll --enable-threads --enable-dynamic-ssl-lib --enable-smp-support --enable-darwin-64bit --with-ssl=/usr/local/opt/openssl"'

- name: source ~/.bash_profile
  shell: source ~/.bash_profile

- name: create installation dir
  file: path=~/.kerl/erlang state=directory mode=0755

- name: update releases
  shell: kerl update releases

- name: regist newest erlang version
  shell: kerl list releases | grep -v 'R' | sort -r | head -1 | awk '{print $NF}'
  register: newest_erlang_version

- name: check local erlang builds
  stat: path='~/.kerl/builds/{{ newest_erlang_version.stdout }}'
  register: check_erlang_build

- name: check local erlang installs
  stat: path='~/.kerl/erlang/{{ newest_erlang_version.stdout }}'
  register: check_erlang_install

- name: build latest erlang
  shell: kerl build {{ newest_erlang_version.stdout }} {{ newest_erlang_version.stdout }}
  when: not check_erlang_build.stat.exists

- name: install latest erlang
  shell: kerl install {{ newest_erlang_version.stdout }} ~/.kerl/erlang/{{ newest_erlang_version.stdout }}
  when: not check_erlang_install.stat.exists

# setup直後は無効
- lineinfile: dest=~/.bash_profile line="source ~/.kerl/erlang/$(kerl list releases | grep -v 'R' | sort -r | head -1 | awk '{print $NF}')/activate"

- name: source ~/.bash_profile
  shell: source ~/.bash_profile
